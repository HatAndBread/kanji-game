<%- include('header') -%>
<script src="p5.min.js"></script>
<body>
<%- include('navbar') -%>
<% const settings=userInfo.userSettings %>
<div id="stuff-container">
<div id="info" hidden><%= JSON.stringify(settings)%></div>
<div id="settings-main">
    <div id="brush-stuff">
    <label for="brush-size">Brush size: </label>
    <input type="range" name="brush-size" id="brush-size" min="1" max="100" value = "<%-settings.brushSize%>">
    </div>
    <div class="divider"></div>
    <div id="color-selector">
        <label for="ink-color">Ink color: </label>
        <input type="color" name="ink-color" id="ink-color" value="<%- settings.inkColor %>">
    </div>
    <div class="divider"></div>
    <div id="practice-selector">
        <label for="practice-selector">Pratice after wrong answer: </label>
        <% if (settings.practiceAfterFailure){ %>
        <input type="checkbox" name="practice-selector" id="practice-selector" checked>
       <% }else{ %>
<input type="checkbox" name="practice-selector" id="practice-selector" >
       <% }%>
    </div>
    <div class="divider"></div>
    <div id="number-of-questions">
        <label for="question-number-selector">Number of questions for each round:  </label>
        <input  type="range" name="question-number-selector" id="question-number-selector" min="5" max="50" value="<%- settings.questionsPerRound%>">
        <p id="question-number-disp"><%= settings.questionsPerRound%></p>
    </div>
    <div class="divider"></div>
    <div id="load-start">
        <label for="on-start">Study set to load on start: </label>
        <select name="on-start" id="on-start">
        <% for (let i = 0; i < userInfo.myDictionaries.length; i++){ console.log(userInfo.myDictionaries);%>
            <option class = "select-options" value="<%- userInfo.myDictionaries[i].title%>"><%=userInfo.myDictionaries[i].title %></option>
       <% } %>
       <option class="select-options"  value="basic">Basic</option>
       <option class="select-options"  value="jlpt2">JLPT2</option>
            <option class="select-options" value="jlpt3">JLPT3</option>
            <option class="select-options"  value="jlpt4">JLPT4</option>
            <option class="select-options" value="jlpt5">JLPT5</option>
            <option class="select-options"  value="places">Places</option>
       </select>
    </div>
    <div class="divider"></div>
    <div id="save-settings">
        <button class="main-button" id="save-changes-butt">Save changes</button>
    </div>
    
</div>
</div>
</body>
</html>

<script>

    const canvas = document.getElementById('color-select-canvas');
    const brushSize = document.getElementById('brush-size')
    const questionNumRange = document.getElementById('question-number-selector')
    const questionNumDisp = document.getElementById('question-number-disp')
    const practiceSelector = document.getElementById('practice-selector')
    const info = JSON.parse(document.getElementById('info').innerText)
    const saveButt = document.getElementById('save-changes-butt');
    const colorInput = document.getElementById('ink-color')
    const onStart = document.getElementById('on-start')
    const options = document.getElementsByClassName('select-options')
    for (let i = 0; i < options.length; i++){
        if (options[i].value === info.loadOnStart){
            options[i].selected = true;
        }
    }
    
   
    
    console.log(info)
    

    const newSettings ={
    brushSize: brushSize.value,
    inkColor: info.inkColor,
    questionsPerRound: questionNumDisp.innerText,
    practiceAfterFailure: info.practiceAfterFailure,
    loadOnStart: info.loadOnStart}
    console.log(newSettings)

onStart.addEventListener('change',(e)=>{
    newSettings.loadOnStart = e.target.value;
    console.log(newSettings)
})
     colorInput.addEventListener('change',(e)=>{
        newSettings.inkColor = e.target.value
        console.log(newSettings)
    })

    questionNumRange.addEventListener('input',(e)=>{
        questionNumDisp.innerText = e.target.value;
        console.log(newSettings);
        newSettings.questionsPerRound= e.target.value;
    })
    brushSize.addEventListener('input',(e)=>{
        newSettings.brushSize = e.target.value;
        console.log(newSettings);
    })
    practiceSelector.addEventListener('input',(e)=>{
        newSettings.practiceAfterFailure = e.target.checked
        console.log(newSettings)
    })
    saveButt.addEventListener('click',async ()=>{
        const res =  await fetch ('/settings',{
            method: 'POST', 
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(newSettings)});
        if (res.message = 'success'){
            window.location.href = '/'
        }
    })
      
      
     

</script>